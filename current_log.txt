2025-05-19 10:53:06,014 INFO __main__ <module>: Application logging configured.
2025-05-19 10:53:06,014 INFO __main__ <module>: Project root determined as: C:\Users\lombi\midi_composer_test
2025-05-19 10:53:06,014 INFO __main__ <module>: Added C:\Users\lombi\midi_composer_test to sys.path
2025-05-19 10:53:06,014 INFO __main__ <module>: Logging to file: C:\Users\lombi\midi_composer_test\logs\app.log
2025-05-19 10:53:11,831 DEBUG tensorflow <module>: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2025-05-19 10:53:12,837 DEBUG h5py._conv <module>: Creating converter from 7 to 5
2025-05-19 10:53:12,838 DEBUG h5py._conv <module>: Creating converter from 5 to 7
2025-05-19 10:53:12,838 DEBUG h5py._conv <module>: Creating converter from 7 to 5
2025-05-19 10:53:12,838 DEBUG h5py._conv <module>: Creating converter from 5 to 7
2025-05-19 10:53:17,370 DEBUG matplotlib wrapper: matplotlib data path: C:\Users\lombi\anaconda3\envs\midi_composer_env_4\Lib\site-packages\matplotlib\mpl-data
2025-05-19 10:53:17,385 DEBUG matplotlib wrapper: CONFIGDIR=C:\Users\lombi\.matplotlib
2025-05-19 10:53:17,385 DEBUG matplotlib <module>: interactive is False
2025-05-19 10:53:17,389 DEBUG matplotlib <module>: platform is win32
2025-05-19 10:53:17,770 DEBUG matplotlib wrapper: CACHEDIR=C:\Users\lombi\.matplotlib
2025-05-19 10:53:17,785 DEBUG matplotlib.font_manager _load_fontmanager: Using fontManager instance from C:\Users\lombi\.matplotlib\fontlist-v390.json
2025-05-19 10:53:19,783 INFO src.gui.main_window <module>: Core modules imported successfully.
2025-05-19 10:53:19,787 INFO __main__ <module>: MainWindow imported successfully.
2025-05-19 10:53:19,787 INFO __main__ main: main function started.
2025-05-19 10:53:19,789 INFO __main__ main: Settings object created successfully.
2025-05-19 10:53:19,789 INFO __main__ main: Model Dir Path from Settings: C:\Users\lombi\midi_composer_test\trained_model
2025-05-19 10:53:19,789 INFO __main__ main: Memory File Full Path from Settings: C:\Users\lombi\midi_composer_test\memory\midi_memory.json
2025-05-19 10:53:19,897 INFO src.midi.instrument_library __init__: InstrumentLibrary initialized with 13 instruments and 8 style presets.
2025-05-19 10:53:19,901 INFO src.gui.main_window __init__: InstrumentLibrary initialized successfully.
2025-05-19 10:53:19,901 INFO src.midi.processor __init__: MIDIProcessor initialized.
2025-05-19 10:53:19,903 INFO src.gui.main_window __init__: MIDIProcessor initialized successfully.
2025-05-19 10:53:19,903 DEBUG src.model.midi_model __init__: MIDIModel initialized with resolution=0.125, calculated steps_per_bar = 32, note_range_size = 88
2025-05-19 10:53:19,903 INFO src.model.midi_model build_model: Building Keras model...
2025-05-19 10:53:19,903 DEBUG src.model.midi_model build_model: Model input shape: (32, 88, 1)
2025-05-19 10:53:19,909 DEBUG src.model.midi_model build_model: Reshaped input shape for LSTM: (None, 32, 88)
2025-05-19 10:53:20,129 DEBUG src.model.midi_model build_model: Model output shape: (None, 32, 88, 1)
2025-05-19 10:53:20,146 INFO src.model.midi_model build_model: Keras model built and compiled successfully.
2025-05-19 10:53:20,157 INFO src.model.midi_model print_summary: Model: "midi_generator_model"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ input_sequence (InputLayer)          │ (None, 32, 88, 1)           │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ reshape (Reshape)                    │ (None, 32, 88)              │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ lstm_layer_1 (LSTM)                  │ (None, 32, 128)             │         111,104 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout (Dropout)                    │ (None, 32, 128)             │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ time_distributed_dense               │ (None, 32, 88)              │          11,352 │
│ (TimeDistributed)                    │                             │                 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ output_sequence (Reshape)            │ (None, 32, 88, 1)           │               0 │
└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘
 Total params: 122,456 (478.34 KB)
 Trainable params: 122,456 (478.34 KB)
 Non-trainable params: 0 (0.00 B)

2025-05-19 10:53:20,161 INFO src.gui.main_window __init__: MIDIModel built successfully.
2025-05-19 10:53:20,161 INFO src.midi.midi_memory _load_memory: Attempting to load memory from C:\Users\lombi\midi_composer_test\memory\midi_memory.json
2025-05-19 10:53:20,173 INFO src.midi.midi_memory _load_memory: Memory loaded successfully from C:\Users\lombi\midi_composer_test\memory\midi_memory.json. Loaded 3 patterns and 0 categories.
2025-05-19 10:53:20,173 INFO src.midi.midi_memory __init__: MIDIMemory initialized. Storage file: C:\Users\lombi\midi_composer_test\memory\midi_memory.json
2025-05-19 10:53:20,175 INFO src.gui.main_window __init__: MIDIMemory initialized successfully.
2025-05-19 10:53:20,205 DEBUG src.gui.main_window __init__: Application icon set from: C:\Users\lombi\midi_composer_test\resources\icons\up-arrow.svg
2025-05-19 10:53:20,291 DEBUG src.core.settings save: Settings.save called with file_path=None. Returning string representation.
2025-05-19 10:53:20,305 INFO src.gui.main_window apply_dark_theme: Applied QSS from C:\Users\lombi\midi_composer_test\src\gui\styles.qss
2025-05-19 10:53:20,305 DEBUG src.gui.main_window populate_memory_list: Populating memory list.
2025-05-19 10:53:20,307 INFO src.gui.main_window populate_memory_list: Memory list populated with 3 patterns.
2025-05-19 10:53:20,307 INFO src.gui.main_window __init__: MainWindow created and shown.
2025-05-19 10:53:20,516 INFO __main__ main: Starting Qt application event loop...
2025-05-19 10:53:25,766 DEBUG src.gui.main_window browse_midi_file: Browse button clicked.
2025-05-19 10:53:32,755 INFO src.gui.main_window browse_midi_file: MIDI file selected: C:/Users/lombi/Desktop/Yeni klasör/[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,388 INFO src.gui.main_window analyze_current_midi_file: Analyzing selected MIDI file: C:/Users/lombi/Desktop/Yeni klasör/[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,393 DEBUG src.gui.main_window run: Worker thread started for task: analyze_midi
2025-05-19 10:53:34,393 INFO src.gui.main_window run: Worker: Analyzing MIDI file: C:/Users/lombi/Desktop/Yeni klasör/[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,394 INFO src.midi.processor analyze_midi_file: Starting analysis of MIDI file: C:/Users/lombi/Desktop/Yeni klasör/[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,400 DEBUG src.midi.processor analyze_midi_file: Using estimated tempo: 123.37497532500493
2025-05-19 10:53:34,423 DEBUG src.midi.processor analyze_midi_file: MIDI file loaded successfully with music21.
2025-05-19 10:53:34,426 DEBUG src.midi.processor analyze_midi_file: Selected time signature: 4/4
2025-05-19 10:53:34,427 DEBUG src.midi.processor analyze_midi_file: Using key from filename: f minor
2025-05-19 10:53:34,428 DEBUG src.midi.processor analyze_midi_file: Final key analysis result: f minor
2025-05-19 10:53:34,429 INFO src.gui.main_window run: Worker: MIDI analysis finished for: C:/Users/lombi/Desktop/Yeni klasör/[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,429 INFO src.gui.main_window on_analysis_finished: MIDI analysis finished successfully.
2025-05-19 10:53:34,429 DEBUG src.gui.main_window run: Worker thread finished for task: analyze_midi
2025-05-19 10:53:34,431 INFO src.gui.main_window display_piano_roll: Generating piano roll for: [MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid
2025-05-19 10:53:34,460 DEBUG matplotlib.pyplot switch_backend: Loaded backend qtagg version 6.9.0.
2025-05-19 10:53:34,525 DEBUG matplotlib.font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-05-19 10:53:34,526 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,526 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,526 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,527 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,527 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,527 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,527 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,528 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,528 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,528 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,528 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,528 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,529 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,529 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,529 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,529 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,529 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,530 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,530 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-19 10:53:34,530 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,530 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,530 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,531 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,533 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,533 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,533 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,533 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-19 10:53:34,533 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,534 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,534 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,534 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,534 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-19 10:53:34,534 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,535 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,535 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,535 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,535 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-19 10:53:34,535 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,536 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,536 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-19 10:53:34,536 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,536 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,536 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,537 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,538 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,538 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,538 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,538 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,539 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,539 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,539 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,539 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,540 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,540 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-19 10:53:34,540 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,540 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,541 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,542 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,542 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,543 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,543 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,543 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,543 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,543 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,544 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,544 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,544 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,544 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,544 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,545 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-19 10:53:34,545 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,545 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,545 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,545 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,546 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,546 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,547 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,548 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,549 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,549 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,549 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,549 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,549 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,550 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,550 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,550 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,550 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,550 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,551 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,551 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,551 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,551 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-19 10:53:34,551 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,552 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-19 10:53:34,552 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,553 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,553 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,553 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,553 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,553 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,554 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-19 10:53:34,554 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,554 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,554 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,554 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,555 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,555 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-19 10:53:34,555 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,555 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,555 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-19 10:53:34,556 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,556 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,556 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,557 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,557 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,557 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,557 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,558 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NettoOffc.ttf', name='Netto Offc', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,558 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,558 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,558 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,558 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,559 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-19 10:53:34,559 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,559 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-19 10:53:34,559 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-19 10:53:34,560 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,560 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,560 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,560 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,561 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,562 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,562 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-19 10:53:34,562 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,563 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-19 10:53:34,563 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,563 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,563 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,563 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,564 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,564 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,564 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,564 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,564 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,565 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,565 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,565 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,565 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,565 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,566 DEBUG matplotlib.font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-05-19 10:53:34,591 DEBUG matplotlib.colorbar _get_ticker_locator_formatter: locator: <matplotlib.ticker.AutoLocator object at 0x000002065A421650>
2025-05-19 10:53:34,646 DEBUG matplotlib.font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-05-19 10:53:34,646 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,647 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,647 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,647 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,648 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,648 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,648 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,648 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,648 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,649 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,649 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,649 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,649 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,649 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,650 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,650 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,650 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,650 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,651 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-19 10:53:34,651 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,651 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,651 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,651 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,652 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,653 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-19 10:53:34,653 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,653 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,653 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,653 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,654 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,654 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-19 10:53:34,654 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,654 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,654 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,655 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,655 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-19 10:53:34,656 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,656 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,656 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,656 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,656 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-19 10:53:34,657 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,657 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,657 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-19 10:53:34,657 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,658 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,658 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,658 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-19 10:53:34,658 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,658 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,659 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,660 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,660 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,660 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,660 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,660 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-19 10:53:34,661 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,662 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,662 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,662 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,662 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,663 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,663 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,663 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,663 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,663 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,664 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,665 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,665 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-19 10:53:34,665 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,665 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,665 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,666 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,666 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,666 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,666 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,667 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,668 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,668 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,668 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,668 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,668 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,669 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,669 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,669 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,669 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,669 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,670 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,670 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,670 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,670 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-19 10:53:34,670 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttc', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,671 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-19 10:53:34,671 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,671 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,671 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,671 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,672 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,672 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,672 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-19 10:53:34,673 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,673 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,673 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,673 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,674 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,674 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-19 10:53:34,674 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,674 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,675 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-19 10:53:34,675 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,675 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,675 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NettoOffc.ttf', name='Netto Offc', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,676 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,677 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,677 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,677 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,677 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-19 10:53:34,677 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,678 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-19 10:53:34,678 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-19 10:53:34,678 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,678 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,678 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,679 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,679 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,679 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,679 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,679 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,680 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-19 10:53:34,681 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,681 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,681 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,681 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,681 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,682 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,682 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,682 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-19 10:53:34,682 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,682 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,683 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,683 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,683 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,683 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-19 10:53:34,683 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,684 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-19 10:53:34,684 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-19 10:53:34,684 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-19 10:53:34,684 DEBUG matplotlib.font_manager _findfont_cached: findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-19 10:53:34,684 DEBUG matplotlib.font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\lombi\\anaconda3\\envs\\midi_composer_env_4\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-05-19 10:53:34,885 DEBUG src.gui.main_window display_piano_roll: Matplotlib figure closed.
2025-05-19 10:53:34,927 DEBUG src.gui.main_window display_piano_roll: Scaled piano roll to label size: 1211x200
2025-05-19 10:53:34,928 INFO src.gui.main_window display_piano_roll: Piano roll image displayed.
2025-05-19 10:53:39,263 INFO src.gui.main_window add_selected_file_to_memory: Attempting to add selected file '[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid' to memory.
2025-05-19 10:53:39,263 INFO src.midi.midi_memory add_pattern: Added pattern '[MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid' with ID 6547b8af-cc11-4ea2-85bf-d2fe043a3a39
2025-05-19 10:53:39,263 INFO src.midi.midi_memory _save_memory: Attempting to save memory to C:\Users\lombi\midi_composer_test\memory\midi_memory.json
2025-05-19 10:53:39,275 INFO src.midi.midi_memory _save_memory: Memory saved successfully.
2025-05-19 10:53:39,277 INFO src.gui.main_window add_selected_file_to_memory: Selected file added to memory with ID: 6547b8af-cc11-4ea2-85bf-d2fe043a3a39
2025-05-19 10:53:40,475 DEBUG src.gui.main_window populate_memory_list: Populating memory list.
2025-05-19 10:53:40,479 INFO src.gui.main_window populate_memory_list: Memory list populated with 4 patterns.
2025-05-19 10:53:40,479 INFO src.midi.midi_memory _save_memory: Attempting to save memory to C:\Users\lombi\midi_composer_test\memory\midi_memory.json
2025-05-19 10:53:40,485 INFO src.midi.midi_memory _save_memory: Memory saved successfully.
2025-05-19 10:53:40,485 INFO src.gui.main_window add_selected_file_to_memory: Memory saved automatically after adding pattern.
2025-05-19 10:53:43,078 INFO src.gui.main_window start_training: Preparing training data from 4 patterns...
2025-05-19 10:53:43,085 DEBUG src.midi.processor midi_to_sequence: Converted MIDI to sequence with shape (256, 88, 2)
2025-05-19 10:53:43,087 DEBUG src.gui.main_window start_training: Added sequence from [MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid to training data
2025-05-19 10:53:43,111 DEBUG src.midi.processor midi_to_sequence: Converted MIDI to sequence with shape (256, 88, 2)
2025-05-19 10:53:43,111 DEBUG src.gui.main_window start_training: Added sequence from [MM]  Agressive Trap MIDI 2 - 153 BPM @prodkxvi Ab Minor.mid to training data
2025-05-19 10:53:43,121 DEBUG src.midi.processor midi_to_sequence: Converted MIDI to sequence with shape (256, 88, 2)
2025-05-19 10:53:43,122 DEBUG src.gui.main_window start_training: Added sequence from [MM]  Agressive Trap MIDI 2 - 153 BPM @prodkxvi Ab Minor.mid to training data
2025-05-19 10:53:43,126 DEBUG src.midi.processor midi_to_sequence: Converted MIDI to sequence with shape (256, 88, 2)
2025-05-19 10:53:43,126 DEBUG src.gui.main_window start_training: Added sequence from [MM]  Agressive Trap MIDI 3 - 141 BPM @prodkxvi F Minor.mid to training data
2025-05-19 10:53:43,126 INFO src.gui.main_window start_training: Training data prepared with shape: (1024, 88, 2)
2025-05-19 10:53:43,126 INFO src.gui.main_window start_training: Reshaped training data to shape: (32, 32, 88, 2)
2025-05-19 10:53:46,564 INFO src.gui.main_window start_training: Model training started in worker thread.
2025-05-19 10:53:46,578 DEBUG src.gui.main_window run: Worker thread started for task: train_model
2025-05-19 10:53:46,578 INFO src.gui.main_window run: Worker: Starting model training for 10 epochs...
2025-05-19 10:53:46,578 DEBUG src.gui.main_window run: MIDIModel.train accepts 'callbacks'. Passing progress callback.
2025-05-19 10:53:46,578 INFO src.model.midi_model train: Starting model training for 10 epochs...
2025-05-19 10:53:46,783 ERROR src.model.midi_model train: Error during model training: Exception encountered when calling Reshape.call().

[1mCannot reshape a tensor with 180224 elements to shape [32,32,88] (90112 elements) for '{{node midi_generator_model_1/reshape_1/Reshape}} = Reshape[T=DT_FLOAT, Tshape=DT_INT32](data, midi_generator_model_1/reshape_1/Reshape/shape)' with input shapes: [32,32,88,2], [3] and with input tensors computed as partial shapes: input[1] = [32,32,88].[0m

Arguments received by Reshape.call():
  • inputs=tf.Tensor(shape=(32, 32, 88, 2), dtype=float32)
Traceback (most recent call last):
  File "C:\Users\lombi\midi_composer_test\src\model\midi_model.py", line 380, in train
    history = self.model.fit(
              ^^^^^^^^^^^^^^^
  File "C:\Users\lombi\anaconda3\envs\midi_composer_env_4\Lib\site-packages\keras\src\utils\traceback_utils.py", line 122, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\lombi\anaconda3\envs\midi_composer_env_4\Lib\site-packages\keras\src\utils\traceback_utils.py", line 124, in error_handler
    del filtered_tb
ValueError: Exception encountered when calling Reshape.call().

[1mCannot reshape a tensor with 180224 elements to shape [32,32,88] (90112 elements) for '{{node midi_generator_model_1/reshape_1/Reshape}} = Reshape[T=DT_FLOAT, Tshape=DT_INT32](data, midi_generator_model_1/reshape_1/Reshape/shape)' with input shapes: [32,32,88,2], [3] and with input tensors computed as partial shapes: input[1] = [32,32,88].[0m

Arguments received by Reshape.call():
  • inputs=tf.Tensor(shape=(32, 32, 88, 2), dtype=float32)
2025-05-19 10:53:46,787 INFO src.gui.main_window run: Worker: Model training finished.
2025-05-19 10:53:46,787 WARNING src.gui.main_window on_training_finished: Model training completed but returned no history.
2025-05-19 10:53:46,787 DEBUG src.gui.main_window run: Worker thread finished for task: train_model
2025-05-19 10:53:50,324 INFO src.gui.main_window search_similar_patterns: Initiating search for similar patterns in memory.
